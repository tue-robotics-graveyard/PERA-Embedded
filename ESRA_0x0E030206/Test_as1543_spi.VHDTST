------------------------------------------------------------
-- VHDL Testbench for as1543_spi
-- 2012 7 19 8 42 21
-- Created by "EditVHDL"
-- "Copyright (c) 2002 Altium Limited"
------------------------------------------------------------

Library IEEE;
Use     IEEE.std_logic_1164.all;
Use     IEEE.std_logic_textio.all;
Use     STD.textio.all;
------------------------------------------------------------

------------------------------------------------------------
entity Testas1543_spi is
end Testas1543_spi;
------------------------------------------------------------

------------------------------------------------------------
architecture stimulus of Testas1543_spi is
    file RESULTS: TEXT open WRITE_MODE is "results.txt";
    procedure WRITE_RESULTS(
        adc_data_chan_0: std_logic_vector(15 downto 0);
        clk: std_logic;
        reset: std_logic;
        spi_adc_cs: std_logic;
        spi_adc_miso: std_logic;
        spi_adc_mosi: std_logic;
        spi_adc_sclk: std_logic
    ) is
        variable l_out : line;
    begin
        write(l_out, now, right, 15);
        write(l_out, adc_data_chan_0, right, 17);
        write(l_out, clk, right, 2);
        write(l_out, reset, right, 2);
        write(l_out, spi_adc_cs, right, 2);
        write(l_out, spi_adc_miso, right, 2);
        write(l_out, spi_adc_mosi, right, 2);
        write(l_out, spi_adc_sclk, right, 2);
        writeline(RESULTS, l_out);
    end procedure;

    component as1543_spi
        port (
            adc_data_chan_0: out std_logic_vector(15 downto 0);
            clk: in std_logic;
            reset: in std_logic;
            spi_adc_cs: out std_logic;
            spi_adc_miso: in std_logic;
            spi_adc_mosi: out std_logic;
            spi_adc_sclk: out std_logic
        );
    end component;

    signal adc_data_chan_0: std_logic_vector(15 downto 0);
    signal clk: std_logic;
    signal reset: std_logic;
    signal spi_adc_cs: std_logic;
    signal spi_adc_miso: std_logic;
    signal spi_adc_mosi: std_logic;
    signal spi_adc_sclk: std_logic;

begin
    DUT:as1543_spi port map (
        adc_data_chan_0 => adc_data_chan_0,
        clk => clk,
        reset => reset,
        spi_adc_cs => spi_adc_cs,
        spi_adc_miso => spi_adc_miso,
        spi_adc_mosi => spi_adc_mosi,
        spi_adc_sclk => spi_adc_sclk
    );

    STIMULUS0:process
    begin
        -- insert stimulus here
        wait;
    end process;

    WRITE_RESULTS(
        adc_data_chan_0,
        clk,
        reset,
        spi_adc_cs,
        spi_adc_miso,
        spi_adc_mosi,
        spi_adc_sclk
    );

end architecture;
------------------------------------------------------------

------------------------------------------------------------
